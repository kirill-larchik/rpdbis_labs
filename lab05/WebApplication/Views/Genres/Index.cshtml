@model WebApplication.ViewModels.Entities.GenresViewModel
@{
    ViewData["Title"] = "Genres";
}

<div class="container w-100">
    <h2 class="text-center">
        <label asp-for="Entities"></label>
    </h2>

    <div class="container">
        <a asp-action="Create" asp-route-sortState="@Model.SortViewModel.CurrentState" asp-route-page="@Model.PageViewModel.CurrentPage" class="btn btn-primary p-2">Add new entity</a>

        <fieldset class="p-2 float-right">
            <form method="post" asp-route-page="@Model.PageViewModel.CurrentPage">
                <label asp-for="GenresFilterViewModel.GenreName"></label>
                <input name="GenreName" value="@Model.GenresFilterViewModel.GenreName" />

                <label asp-for="GenresFilterViewModel.GenreDescription"></label>
                <input name="GenreDescription" value="@Model.GenresFilterViewModel.GenreDescription" />

                <input type="submit" value="Filter" class="btn btn-primary" />
            </form>
        </fieldset>
    </div>

    <table class="table table-hover table-sm">
        <thead class="thead-dark text-center text-white">
            <tr>
                <th class="w-25">
                    <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.GenreNameSort" asp-route-page="@Model.PageViewModel.CurrentPage" class="nav-link text-white">
                        @Html.DisplayNameFor(e => e.Entity.GenreName)
                    </a>
                </th>
                <th class="w-50">
                    <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.GenreDescriptionSort" asp-route-page="@Model.PageViewModel.CurrentPage" class="nav-link text-white">
                        @Html.DisplayNameFor(e => e.Entity.GenreDescription)
                    </a>
                </th>
                <th class="w-25 align-middle">Modification</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var entity in Model.Entities)
            {
                <tr>
                    <td>@entity.GenreName</td>
                    <td>@entity.GenreDescription</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@entity.GenreId" asp-route-sortState="@Model.SortViewModel.CurrentState" asp-route-page="@Model.PageViewModel.CurrentPage" class="btn btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@entity.GenreId" asp-route-sortState="@Model.SortViewModel.CurrentState" asp-route-page="@Model.PageViewModel.CurrentPage" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
   
    <div class="container">
        <div class="float-left w-50">
            <form method="get">
                <input type="number" name="page" min="1" max="@Model.PageViewModel.TotalPages" value="@Model.PageViewModel.CurrentPage" class="w-25" />
                <input type="submit" value="Move" class="btn btn-primary" />
            </form>
        </div>
        <div class="text-right float-right">
            @if (Model.PageViewModel.HasPreviousPage)
            {
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CurrentState" asp-route-page="@(Model.PageViewModel.CurrentPage - 1)" class="btn btn-primary">Back</a>
            }
            @if (Model.PageViewModel.HasNextPage)
            {
                <a asp-action="Index" asp-route-sortState="@Model.SortViewModel.CurrentState" asp-route-page="@(Model.PageViewModel.CurrentPage + 1)" class="btn btn-primary">Next</a>
            }
        </div>
    </div>
</div>